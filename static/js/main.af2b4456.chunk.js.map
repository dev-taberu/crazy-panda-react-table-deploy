{"version":3,"sources":["components/table/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Table","headers","data","itemsOnPage","useState","tableSearchString","setTableSearchString","tableSortColumn","setTableSortColumn","tableSortDecrease","setTableSortDecrease","undefined","maxItemsOnPage","setMaxItemsOnPage","currentPage","setCurrentPage","sortFunc","item1","item2","searchPredicate","e","res","Object","keys","forEach","item","toString","indexOf","renderHeaders","table_headers","map","header","className","onClick","columnName","href","renderRows","start_item_index","end_item_index","parseInt","slice","renderCells","getPagesCount","pagesCount","Math","trunc","length","renderPagination","Array","fill","el","i","renderTableContent","prepared_data","sort","i1","i2","filter","search","onChange","target","value","renderTable","tableHeaders","name","surname","age","birthDate","city","dataGeneration","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af2b4456.chunk.js","sourcesContent":["import {useState} from 'react';\r\n\r\nexport default function Table ({headers, data, itemsOnPage}) {\r\n\r\n    let [tableSearchString, setTableSearchString] = useState('');\r\n    let [tableSortColumn, setTableSortColumn] = useState(null);\r\n    let [tableSortDecrease, setTableSortDecrease] = useState(false);\r\n    let [maxItemsOnPage, setMaxItemsOnPage] = useState((itemsOnPage === undefined)?50:itemsOnPage[0] || 50);\r\n    let [currentPage, setCurrentPage] = useState(0);\r\n\r\n    const setSorting = (columnName) => {\r\n        if(tableSortColumn === columnName) {\r\n            setTableSortDecrease(!tableSortDecrease);\r\n            return;\r\n        }\r\n        \r\n        setTableSortColumn(columnName);\r\n        setTableSortDecrease(false);\r\n    }\r\n\r\n    const sortFunc = (item1, item2) => {\r\n        if(item1[tableSortColumn] < item2[tableSortColumn])\r\n            return -1;\r\n        else if(item1[tableSortColumn] > item2[tableSortColumn])\r\n            return 1;\r\n        else\r\n            return 0;\r\n    }\r\n\r\n    const searchPredicate = (e) => {\r\n        let res = false;\r\n        Object.keys(e).forEach(item => { \r\n            if(e[item].toString().indexOf(tableSearchString) !== -1) {\r\n                res = true;\r\n            }\r\n        })\r\n\r\n        return res;\r\n    }\r\n\r\n    const search = (data) => {\r\n        if(tableSearchString.length === 0)\r\n            return data;\r\n\r\n        return data.filter(searchPredicate);\r\n\r\n    }\r\n\r\n    const sort = (data) => {\r\n        if(tableSortColumn === null)\r\n            return data;\r\n        \r\n        if(tableSortDecrease) {\r\n            return data.sort((i1, i2) => sortFunc(i2, i1));\r\n        } else {\r\n            return data.sort(sortFunc);\r\n        }\r\n    }\r\n\r\n    const renderHeaders = (table_headers) => table_headers.map(header => (\r\n        <th className='table__content-header' onClick={() => { setSorting(header) }}><a className='table__content-header-name' href='#'>{headers[header]}</a>{(tableSortColumn === header)?(tableSortDecrease)?'↓':'↑':''}</th>\r\n    ))\r\n\r\n    const renderRows = (data, table_headers) => {\r\n        let start_item_index = maxItemsOnPage * currentPage;\r\n        let end_item_index = parseInt(start_item_index) + parseInt(maxItemsOnPage);\r\n\r\n        return data.slice(start_item_index, end_item_index).map(item => (\r\n            <tr className='table__content-row'>\r\n                {renderCells(item, table_headers)}\r\n            </tr>\r\n        ))\r\n    }\r\n\r\n    const renderCells = (item, table_headers) => (\r\n        table_headers.map(header => (\r\n            <td className='table__content-cell'>{item[header]}</td>\r\n        ))\r\n    )\r\n\r\n    const getPagesCount = (data) => {\r\n        let pagesCount = Math.trunc(data.length / parseInt(maxItemsOnPage));\r\n        if(pagesCount !== data.length / parseInt(maxItemsOnPage) || pagesCount === 0)\r\n            pagesCount += 1;\r\n\r\n        return pagesCount;\r\n    }\r\n\r\n    const renderPagination = (data) => {\r\n        let pagesCount = getPagesCount(data);\r\n\r\n        if(currentPage >= pagesCount)\r\n            setCurrentPage(0);\r\n        return new Array(pagesCount).fill(null).map((el, i) => (\r\n            <a href='#' className={`table__pagination-number ${(currentPage === i)?'page-active':''}`} onClick={() => {setCurrentPage(i)}}>{i+1}</a>\r\n        ))\r\n    }\r\n\r\n    const renderTableContent = (data, headers) => {\r\n        return (\r\n            <table className='table__content'>\r\n                {renderHeaders(headers)}\r\n                {renderRows(data, headers)}\r\n            </table>\r\n        )\r\n    }\r\n\r\n    const renderMaxItems = () => {\r\n        return itemsOnPage.map(item => \r\n            <a href='#' className={`table__pagination-number ${(maxItemsOnPage === item)?'page-active':''}`} onClick={() => setMaxItemsOnPage(item)}>{item}</a>\r\n        )\r\n    }\r\n\r\n    const renderTable = () => {\r\n        let table_headers = Object.keys(headers);\r\n        let prepared_data = sort(search(data));\r\n\r\n        return (\r\n            <div className='table'>\r\n                <div className='table__header'>\r\n                    <div className='table__pagination'>\r\n                        {renderMaxItems()}\r\n                    </div>\r\n                    <div className='table__search'>\r\n                        <label className='table__search-label'>Search:</label>\r\n                        <input className='table__search-input' onChange={(e) => setTableSearchString(e.target.value)}/>\r\n                    </div>\r\n                </div>\r\n                {renderTableContent(prepared_data, table_headers)}\r\n                <div className='table__pagination'>\r\n                    <a href='#' className='table__pagination-prev' onClick={() => {if(currentPage !== 0) setCurrentPage(currentPage - 1)}}>Prev</a>\r\n                    {renderPagination(prepared_data)}\r\n                    <a href='#' className='table__pagination-next' onClick={() => {if(currentPage !== getPagesCount(data) - 1) setCurrentPage(currentPage + 1)}}>Next</a>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className='table-container'>\r\n            {renderTable()}\r\n        </div>\r\n    );\r\n}","import './style/table.css';\r\n\r\nimport Table from './components/table/Table';\r\n\r\nconst tableHeaders = {\r\n  name: 'Имя',\r\n  surname: 'Фамилия',\r\n  age: 'Возраст',\r\n  birthDate: 'Дата рождения',\r\n  city: 'Город'\r\n}\r\n\r\nconst dataGeneration = () => {\r\n  let data = [];\r\n  for(let i = 0; i < 30; i++) {\r\n    data.push({name: `Ivan${i}`, surname: 'Ivanov', age: Math.trunc(i / 2) + 31, birthDate: 1990, city: 'Moscow'})\r\n  }\r\n  for(let i = 0; i < 30; i++) {\r\n    data.push({name: `Denis${i}`, surname: 'Denisov', age: Math.trunc(i / 2) + 15, birthDate: 2005, city: 'Kazan'})\r\n  }\r\n  for(let i = 0; i < 30; i++) {\r\n    data.push({name: `Maria${i}`, surname: 'Solnceva', age: Math.trunc(i / 2) + 23, birthDate: 1998, city: 'Voronezh'})\r\n  }\r\n  data.push({name: `Ivna`, surname: 'test', age: 21, birthDate: 1009, city:'Moscorw'})\r\n  return data;\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Table headers={tableHeaders} data={dataGeneration()} itemsOnPage={['10', '20', '30', '50']}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}